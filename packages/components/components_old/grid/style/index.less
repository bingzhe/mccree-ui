@import "../../styles/vars.less";

@grid-prefix-cls: ~"@{mccree-prefix}-grid";
@grid-container-prefix-cls: ~"@{grid-prefix-cls}-container";

// Grid system
.@{grid-container-prefix-cls} {
    display: flex;
    flex-flow: row wrap;
    box-sizing: border-box;

    &::before,
    &::after {
        display: flex;
    }
}

// x轴原点
.@{grid-container-prefix-cls}-start {
    justify-content: flex-start;
}

// x轴居中
.@{grid-container-prefix-cls}-center {
    justify-content: center;
}

// x轴反方向
.@{grid-container-prefix-cls}-end {
    justify-content: flex-end;
}

// x轴平分
.@{grid-container-prefix-cls}-space-between {
    justify-content: space-between;
}

// x轴有间隔地平分
.@{grid-container-prefix-cls}-space-around {
    justify-content: space-around;
}

// 顶部对齐
.@{grid-container-prefix-cls}-top {
    align-items: flex-start;
}

// 居中对齐
.@{grid-container-prefix-cls}-middle {
    align-items: center;
}

// 底部对齐
.@{grid-container-prefix-cls}-bottom {
    align-items: flex-end;
}

.@{grid-prefix-cls} {
    position: relative;
    max-width: 100%;
    // Prevent columns from collapsing when empty
    min-height: 1px;
    box-sizing: border-box;
}

.make-grid();

// Extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.

.make-grid(-xs);

// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.

@media (min-width: @screen-sm-min) {
    .make-grid(-sm);
}

// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.

@media (min-width: @screen-md-min) {
    .make-grid(-md);
}

// Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.

@media (min-width: @screen-lg-min) {
    .make-grid(-lg);
}

// Extra Large grid
//
// Columns, offsets, pushes, and pulls for the full hd device range.

@media (min-width: @screen-xl-min) {
    .make-grid(-xl);
}

// Extra Extra Large grid
//
// Columns, offsets, pushes, and pulls for the full hd device range.

@media (min-width: @screen-xxl-min) {
    .make-grid(-xxl);
}

// mixins for grid system
// ------------------------

.loop-grid-columns(@index, @class) when (@index > 0) {
    .@{grid-prefix-cls}@{class}-@{index} {
        display: block;
        flex: 0 0 percentage((@index / @grid-columns));
        max-width: percentage((@index / @grid-columns));
    }
    .@{grid-prefix-cls}@{class}-push-@{index} {
        left: percentage((@index / @grid-columns));
    }
    .@{grid-prefix-cls}@{class}-pull-@{index} {
        right: percentage((@index / @grid-columns));
    }
    .@{grid-prefix-cls}@{class}-offset-@{index} {
        margin-left: percentage((@index / @grid-columns));
    }
    .@{grid-prefix-cls}@{class}-order-@{index} {
        order: @index;
    }
    .loop-grid-columns((@index - 1), @class);
}

.loop-grid-columns(@index, @class) when (@index = 0) {
    .@{grid-prefix-cls}@{class}-@{index} {
        display: none;
    }
    .@{grid-prefix-cls}-push-@{index} {
        left: auto;
    }
    .@{grid-prefix-cls}-pull-@{index} {
        right: auto;
    }
    .@{grid-prefix-cls}@{class}-push-@{index} {
        left: auto;
    }
    .@{grid-prefix-cls}@{class}-pull-@{index} {
        right: auto;
    }
    .@{grid-prefix-cls}@{class}-offset-@{index} {
        margin-left: 0;
    }
    .@{grid-prefix-cls}@{class}-order-@{index} {
        order: 0;
    }
}

.make-grid(@class: ~"") {
    .loop-grid-columns(@grid-columns, @class);
}
